C51 COMPILER V9.00   SERIAL                                                                03/07/2018 21:33:05 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN serial.OBJ
COMPILER INVOKED BY: C:\Program Files\C51\BIN\C51.EXE serial.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          /**********************
   2          基于STC15F2K60S2系列单片机C语言编程实现
   3          使用如下头文件，不用另外再包含"REG51.H"
   4          #include "STC15F2K60S2.H" 
   5          ***********************/
   6          #include "serial.h"
   7          #include "delay.h"
   8          #include "commandparser.h"
   9          #include "moto.h"
  10          #include "pwm.h"
  11          
  12          bit busy;
  13          
  14          #define FOSC 11059200L          //晶振频率 特别提示：检查开发板的晶振频率是否和设定的频率一致
  15          #define BAUD 9600                       // 波特率
  16          #define TM (65536 - (FOSC/4/BAUD))               
  17          
  18          
  19          
  20          #define S2RI 0x01
  21          #define S2TI 0x02
  22          
  23          /*
  24          *  串口1： 发送单个字节
  25          */
  26          void send_data_by_uart1(uchar dat)
  27          {
  28   1              while(busy);
  29   1              ACC=dat;
  30   1              busy=1;
  31   1              SBUF=ACC;
  32   1      }
  33          
  34          /*
  35          * 串口1： 发送字符串
  36          */
  37          void send_string_by_uart1(char *s)
  38          {
  39   1              while(*s)
  40   1              {
  41   2                      send_data_by_uart1(*s++);
  42   2              }
  43   1      }
  44          
  45          /*
  46            串口1： 中断服务程序
  47          */
  48          void uart1() interrupt 4 using 1
  49          {
  50   1      //      if(RI)
  51   1      //      {
  52   1      //              RI=0;
  53   1      //      }
  54   1              if(TI)
  55   1              {
C51 COMPILER V9.00   SERIAL                                                                03/07/2018 21:33:05 PAGE 2   

  56   2                      TI=0;           
  57   2                      busy=0;
  58   2              }
  59   1      }
  60          
  61          /*
  62          * 串口1： 串口初始化
  63          */
  64          void uart1_init()
  65          {                                               
  66   1              AUXR=0X80;   //定时器1作为串口1的波特率发生器
  67   1              SCON=0x50;       //串口1的控制寄存器， 工作于方式1
  68   1              TMOD=0x20;       //定时器1工作在模式2： 8位自动重装载模式
  69   1              TH1=TL1=-(FOSC/12/32/BAUD);              //等同于TH1=TL1=256-(FOSC/12/32/BAUD);
  70   1              TR1=1;           //定时器1控制寄存器TCON， 运行控制位
  71   1              ES=1;    //CPU总中断许可控制位
  72   1              EA=1;    //串口中断控制位
  73   1      }
  74          
  75          
  76          
  77          
  78          
  79          void uart2_init(void)
  80          {
  81   1              S2CON=0x50;
  82   1              T2L = TM; //设置波特率重装值
  83   1              T2H = TM>>8;
  84   1              AUXR|=0X14;        
  85   1              IE2=0x01;
  86   1              EA=1;
  87   1      }
  88          
  89          void uart2() interrupt 8 using 1
  90          {
  91   1      //      if(S2CON & S2RI)
  92   1      //      {
  93   1      //          BYTE temp;
  94   1      //              S2CON &= ~S2RI;
  95   1      //              temp=S2BUF;
  96   1      //              SendDataByUart1(temp);
  97   1      //
  98   1      //              delay(2);                 
  99   1      //      }
 100   1              if(S2CON & S2TI)
 101   1              {
 102   2                      S2CON &= ~S2TI;
 103   2                      busy=0;
 104   2              }
 105   1      }
 106          void send_data_by_uart2(uchar dat)
 107          {
 108   1              while(busy);
 109   1              ACC=dat;
 110   1              busy = 1;
 111   1              S2BUF=ACC;
 112   1      }
 113          
 114          void send_string_by_uart2(char *s)
 115          {
 116   1              while(*s)
 117   1              {
C51 COMPILER V9.00   SERIAL                                                                03/07/2018 21:33:05 PAGE 3   

 118   2                      send_data_by_uart2(*s++);
 119   2              }
 120   1      }
 121          
 122          
 123          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    155    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
